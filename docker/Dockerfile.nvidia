ARG BASE_IMAGE=nvcr.io/nvidia/pytorch:23.12-py3
FROM ${BASE_IMAGE}

LABEL maintainer="plturrell@github.com"
LABEL org.opencontainers.image.title="SAP HANA Cloud LangChain Integration with GPU Acceleration"
LABEL org.opencontainers.image.description="FastAPI service for SAP HANA Cloud vector store operations with NVIDIA GPU acceleration and TensorRT optimization"
LABEL org.opencontainers.image.vendor="SAP Enhanced"
LABEL org.opencontainers.image.version="1.0.2"
LABEL org.opencontainers.image.source="https://github.com/plturrell/langchain-integration-for-sap-hana-cloud"
LABEL com.nvidia.volumes.needed="nvidia_driver"
LABEL nvidia.ngc.blueprint.compatible="true"
LABEL nvidia.ngc.gpu.product="NVIDIA T4, NVIDIA A10, NVIDIA A100, NVIDIA H100"
LABEL nvidia.ngc.gpu.count="1+"
LABEL nvidia.ngc.gpu.memory="16G+"

WORKDIR /app

# Copy application files
COPY test_app_enhanced.py /app/
COPY app.py /app/
COPY requirements.txt /app/

# Install dependencies
RUN pip install --no-cache-dir -r requirements.txt
RUN pip install --no-cache-dir fastapi uvicorn pydantic python-multipart psutil

# Install TensorRT (if not already included in base image)
RUN if ! python -c "import tensorrt" &>/dev/null; then \
        echo "Installing TensorRT..." && \
        pip install --no-cache-dir nvidia-tensorrt && \
        python -c "import tensorrt; print(f'TensorRT {tensorrt.__version__} installed successfully')"; \
    else \
        TENSORRT_VERSION=$(python -c "import tensorrt; print(tensorrt.__version__)") && \
        echo "TensorRT ${TENSORRT_VERSION} already installed"; \
    fi

# Set up TensorRT engine cache directory
RUN mkdir -p /app/trt_engines
ENV TENSORRT_ENGINE_CACHE_DIR=/app/trt_engines

# Install curl for healthcheck
RUN apt-get update && apt-get install -y curl && apt-get clean && rm -rf /var/lib/apt/lists/*

# Expose port
EXPOSE 8000

# Set environment variables
ENV GPU_ENABLED=true
ENV USE_TENSORRT=true
ENV TENSORRT_PRECISION=fp16
ENV LOG_LEVEL=DEBUG
ENV ENABLE_CORS=true
ENV PORT=8000
ENV PYTHONUNBUFFERED=1

# Healthcheck
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Run the application
CMD ["python", "-m", "uvicorn", "test_app_enhanced:app", "--host", "0.0.0.0", "--port", "8000"]