version: '3.8'

services:
  # Arrow Flight API backend with GPU acceleration
  backend:
    image: finsightintelligence/finsight_utils_langchain_hana:minimal-secure
    container_name: langchain-hana-backend
    restart: always
    ports:
      - "8000:8000"  # API port
      - "8815:8815"  # Arrow Flight port
    environment:
      - FLIGHT_HOST=0.0.0.0
      - FLIGHT_PORT=8815
      - FLIGHT_AUTO_START=true
      - SAP_HANA_HOST=${SAP_HANA_HOST:-hana.database.cloud.sap}
      - SAP_HANA_PORT=${SAP_HANA_PORT:-443}
      - SAP_HANA_USER=${SAP_HANA_USER}
      - SAP_HANA_PASSWORD=${SAP_HANA_PASSWORD}
      - VECTOR_TABLE_NAME=${VECTOR_TABLE_NAME:-LANGCHAIN_VECTORS}
      - LOG_LEVEL=INFO
    volumes:
      - ./config/connection.json:/app/config/connection.json:ro
      - ./model-repository:/app/model-repository
      - backend-cache:/app/cache
    networks:
      - langchain-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  # React frontend - production build with Nginx
  frontend:
    image: finsightintelligence/finsight_langchain_hana_frontend:latest
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    container_name: langchain-hana-frontend
    restart: always
    ports:
      - "80:3000"
    environment:
      - REACT_APP_API_URL=${API_URL:-http://backend:8000}
      - NODE_ENV=production
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - langchain-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Monitoring service
  prometheus:
    image: prom/prometheus:latest
    container_name: langchain-hana-prometheus
    restart: always
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - langchain-network

  # Visualization service
  grafana:
    image: grafana/grafana:latest
    container_name: langchain-hana-grafana
    restart: always
    volumes:
      - ./config/grafana/provisioning:/etc/grafana/provisioning:ro
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3001:3000"
    networks:
      - langchain-network
    depends_on:
      - prometheus

volumes:
  backend-cache:
  prometheus-data:
  grafana-data:

networks:
  langchain-network:
    driver: bridge